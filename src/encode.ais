# my flow facts for encode and functions it calls

# flow ("findSmallest_while1") + ("findSmallest_while2") <= NR_OF_NODES ("findSmallest");
flow ("findSmallest_while1") + ("findSmallest_while2") <= 127 ("findSmallest");

#flow ("fillTable_if") <= nr_of_leaves ("fillTable");
flow ("fillTable_if") <= 127 ("fillTable");

# flow ("invertCodes_inner") <= (nr_of_chars+2)*(nr_of_chars-1)/2 = (256+2)*(256-1)/2 = 32895
#flow ("invertCodes_inner") <= 32895 ("invertCodes"); has to be
#updated, as code length could be bounded now


#flow ("compress_inner_while") <= 7*4095 ("compress");
flow ("compress_inner_while") <= 28665 ("compress");

#flow ("compress_inner_if") <= floor(7/8*4095) ("compress");
flow ("compress_inner_if") <= 3583 ("compress");

loop "buildHuffmanTree" + 1 loops MAX @nr_of_chars; #128
loop "buildHuffmanTree" + 2 loops MAX @strlen; #4095
loop "buildHuffmanTree" + 3 loops MAX @nr_of_chars;
loop "buildHuffmanTree" + 4 loops MAX @nr_of_chars;
loop "buildHuffmanTree" + 5 loops MAX @nr_of_chars-2;

loop "invertCodes" + 1 loops MAX @nr_of_chars;
loop "invertCodes" + 2 loops MAX @max_code_length;

loop "findSmallest" + 1 loops MAX @nr_of_nodes;
loop "findSmallest" + 2 loops MAX @nr_of_nodes-1;
loop "findSmallest" + 3 loops MAX @nr_of_nodes;

loop "compress" + 1 loops MAX @strlen;
loop "compress" + 2 loops MAX @strlen;
loop "compress" + 3 loops MAX 15;

loop "merge_sort_nrecursive" + 1 loops MAX(log(@size, 2));
loop "merge_sort_nrecursive" + 2 loops MAX @size;
#loop "merge_sort_nrecursive" + 3 loops MAX @size/2;
#loop "merge_sort_nrecursive" + 4 loops MAX @size/2;
#loop "merge_sort_nrecursive" + 5 loops MAX @size/2;

#flow ("ms_loop_3") + ("ms_loop_4") + ("ms_loop_5") <= @size ("ms_loop_2");
flow ("ms_loop_3") + ("ms_loop_4") + ("ms_loop_5") <= 127 ("ms_loop_2");
#flow ("ms_loop_6") <= @size ("ms_loop_2");
flow ("ms_loop_6") <= 127 ("ms_loop_2");
